{"title":"js笔记-5（正则表达式）","slug":"js笔记-5","date":"2022-07-17T03:19:30.000Z","updated":"2022-07-26T07:03:20.768Z","comments":true,"path":"api/articles/js笔记-5.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"js笔记（正则表达式）\"><a href=\"#js笔记（正则表达式）\" class=\"headerlink\" title=\"js笔记（正则表达式）\"></a>js笔记（正则表达式）</h1><hr>\n<h2 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h2><ol>\n<li><p>创建正则表达式的方法</p>\n<ol>\n<li><p>语法： var 变量 &#x3D; new RegExp(“正则表达式”,”匹配模式”);</p>\n</li>\n<li><p>可以检查一个字符串中是否含有正则表达式</p>\n</li>\n<li><p>在构造函数中可以传递一个匹配模式作为第二个参数</p>\n<ol>\n<li><p>i 忽略大小写</p>\n</li>\n<li><p>g 全局匹配模式</p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>正则表达式的方法：</p>\n<ol>\n<li><p>test( )</p>\n</li>\n<li><p>使用这个方法可以用来检查一个字符串是否符合正则表达式的规则，如果符合则返回true，否则返回false</p>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h2 id=\"正则表达式语法\"><a href=\"#正则表达式语法\" class=\"headerlink\" title=\"正则表达式语法\"></a>正则表达式语法</h2><ol>\n<li><p>使用字面量来创建正则表达式</p>\n<ol>\n<li>语法： var 变量 &#x3D; &#x2F;正则表达式&#x2F;匹配模式</li>\n</ol>\n</li>\n<li><p>使用 | 表示或者的意思</p>\n</li>\n<li><p>[]里面的内容也是或的关系</p>\n</li>\n<li><p>可以用[A-z]表示所有字母</p>\n</li>\n<li><p>[0-9]任意数字</p>\n</li>\n<li><p>[^ ]除了</p>\n</li>\n</ol>\n<h2 id=\"正则表达式相关方法\"><a href=\"#正则表达式相关方法\" class=\"headerlink\" title=\"正则表达式相关方法\"></a>正则表达式相关方法</h2><ol>\n<li><p>split()</p>\n<ol>\n<li><p>split()可以将一个字符串拆分为一个数组</p>\n</li>\n<li><p>可以使用正则表达式进行拆分</p>\n</li>\n</ol>\n</li>\n<li><p>search()</p>\n<ol>\n<li><p>search()可以搜索字符串中是否含有指定内容。如果搜索到指定内容，则会返回第一次出现的索引，没有找到则返回-1</p>\n</li>\n<li><p>可以使用正则表达式进行检索</p>\n</li>\n</ol>\n</li>\n<li><p>match()</p>\n<ol>\n<li><p>match()可以根据正则表达式，从一个字符串中将符合条件的内容提取出来</p>\n</li>\n<li><p>默认情况下我们的match只会找到第一个符合要求的内容，找到以后就会停止检索</p>\n<ol>\n<li>我们可以设置正则表达式为全局匹配模式，这样就可以匹配到所有内容</li>\n</ol>\n</li>\n<li><p>match()会将匹配到的内容封装到一个数组中返回，即使只查询到一个结果</p>\n</li>\n</ol>\n</li>\n<li><p>replace()</p>\n<ol>\n<li><p>replace()可以将字符串中指定内容替换为新的内容</p>\n</li>\n<li><p>参数：</p>\n<ol>\n<li><p>被替换的内容，可以接受一个正则表达式作为参数</p>\n</li>\n<li><p>新的内容</p>\n</li>\n</ol>\n</li>\n<li><p>默认只会替换第一个</p>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h2 id=\"正则表达式相关语法\"><a href=\"#正则表达式相关语法\" class=\"headerlink\" title=\"正则表达式相关语法\"></a>正则表达式相关语法</h2><ol>\n<li><p>量词</p>\n<ol>\n<li><p>通过量词可以设置一个内容出现的次数</p>\n</li>\n<li><p>量词只对它前面的内容起作用，可以用括号将多个内容合起来</p>\n</li>\n<li><p>{n} 正好出现n次</p>\n</li>\n<li><p>{m,n} 出现m-n次</p>\n</li>\n<li><p>{m,}  出现m次以上</p>\n</li>\n<li><p>+ 至少一个，相当于{1,}</p>\n</li>\n<li><p>* 0个或多个，相当于{0,}</p>\n</li>\n<li><p>？ 0个或一个，相当于{0,1}</p>\n</li>\n</ol>\n</li>\n<li><p>特定开头或结尾</p>\n<ol>\n<li><p>^ 表示开头，例：reg &#x3D; &#x2F;^a&#x2F;;</p>\n</li>\n<li><p>$ 表示结尾，例：reg &#x3D; &#x2F;a$&#x2F;;</p>\n</li>\n<li><p>如果在正则表达式中同时使用^ $则要求字符串必须完全符合正则表达式</p>\n</li>\n</ol>\n</li>\n<li><p>. 表示任意字符</p>\n<ol>\n<li><p>在正则表达式中使用 \\ 作为转义字符 \\. 来表示 .</p>\n</li>\n<li><p>\\w 表示任意字母、数字、_</p>\n</li>\n<li><p>\\W 除了字母、数字、_</p>\n</li>\n<li><p>\\d 任意的数字[0-9]</p>\n</li>\n<li><p>\\D 除了数字</p>\n</li>\n<li><p>\\s 空格</p>\n</li>\n<li><p>\\S 除了空格</p>\n</li>\n<li><p>\\b 单词边界</p>\n</li>\n<li><p>\\B 除了单词边界</p>\n</li>\n</ol>\n</li>\n</ol>\n","categories":[{"name":"笔记","slug":"笔记","count":7,"path":"api/categories/笔记.json"},{"name":"js笔记","slug":"笔记/js笔记","count":7,"path":"api/categories/笔记/js笔记.json"}],"tags":[{"name":"笔记","slug":"笔记","count":7,"path":"api/tags/笔记.json"}]}