{"title":"js笔记-7（操作样式的语法）","slug":"js笔记-7","date":"2022-07-23T06:49:12.000Z","updated":"2022-07-26T07:03:39.596Z","comments":true,"path":"api/articles/js笔记-7.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"js笔记（操作样式的语法）\"><a href=\"#js笔记（操作样式的语法）\" class=\"headerlink\" title=\"js笔记（操作样式的语法）\"></a>js笔记（操作样式的语法）</h1><hr>\n<h1 id=\"操作内联样式\"><a href=\"#操作内联样式\" class=\"headerlink\" title=\"操作内联样式\"></a>操作内联样式</h1><ol>\n<li><p>通过JS修改元素的样式</p>\n<ol>\n<li><p>语法： 元素.style.样式名 &#x3D; 样式值</p>\n</li>\n<li><p>样式值需要用双引号“ ” 引住</p>\n</li>\n<li><p>注意：如果CSS的样式名中含有 - ，这种名称在JS中是不合法的，需要将这种样式名修改为驼峰命名法，去掉-，然后将-后的字母大写</p>\n</li>\n<li><p>通过style属性设置的样式都是内联样式，内联样式有较高的优先级，所以通过JS修改的样式往往会立即显示</p>\n</li>\n<li><p>但是如果在样式中写了!important，则此时样式会有最高的优先级，此时会导致JS修改样式失败</p>\n</li>\n</ol>\n</li>\n<li><p>读取CSS的样式</p>\n<ol>\n<li><p>语法： 元素.style.样式名</p>\n<ol>\n<li>通过style属性设置和读取的都是内联样式</li>\n</ol>\n</li>\n<li><p>语法： 元素.currentStyle.样式名</p>\n<ol>\n<li>可以用来读取当前元素正在显示的样式</li>\n</ol>\n</li>\n<li><p>getComputedStyle( )</p>\n<ol>\n<li><p>getComputedStyle( )这个方法来获取元素当前的样式</p>\n</li>\n<li><p>需要两个参数，第一个为要获取的元素，第二个可以传递一个伪元素，一般用null</p>\n</li>\n<li><p>该方法会返回一个对象，对象中封装了当前元素对应的样式</p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h2 id=\"其他样式相关的属性\"><a href=\"#其他样式相关的属性\" class=\"headerlink\" title=\"其他样式相关的属性\"></a>其他样式相关的属性</h2><ol>\n<li><p>clientWidth与clientHeight</p>\n<ol>\n<li><p>这两个属性可以获取元素的可见宽度和高度</p>\n</li>\n<li><p>返回值都是不带px的，返回的是一个数字，可以直接进行计算</p>\n</li>\n<li><p>会获取元素宽度和高度，包括内容区和内边距</p>\n</li>\n<li><p>都是只读属性，不能进行修改</p>\n</li>\n</ol>\n</li>\n<li><p>offsetWidth与offsetHeight</p>\n<ol>\n<li>与clientWidth类似，但获取元素的整个宽度和高度，包括内容区、内边距和边框</li>\n</ol>\n</li>\n<li><p>offsetParent</p>\n<ol>\n<li><p>可以用来获取当前元素的定位父元素</p>\n</li>\n<li><p>会获取到离当前元素最近的开启了定位的祖先元素，如果所有的祖先元素都没有开启定位，则返回body</p>\n</li>\n</ol>\n</li>\n<li><p>offsetLeft与offsetRight</p>\n<ol>\n<li>返回元素的 水平&#x2F;垂直 偏移位置</li>\n</ol>\n</li>\n<li><p>scrollWidth与scrollHeight</p>\n<ol>\n<li>可以获取元素整个滚动区域的 宽度&#x2F;高度</li>\n</ol>\n</li>\n<li><p>scrollLeft与scrollTop</p>\n<ol>\n<li>可以获取 水平&#x2F;垂直 滚动条的距离</li>\n</ol>\n</li>\n</ol>\n","categories":[{"name":"笔记","slug":"笔记","count":7,"path":"api/categories/笔记.json"},{"name":"js笔记","slug":"笔记/js笔记","count":7,"path":"api/categories/笔记/js笔记.json"}],"tags":[{"name":"笔记","slug":"笔记","count":7,"path":"api/tags/笔记.json"}]}