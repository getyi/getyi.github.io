{"title":"js笔记-8（BOM）","slug":"js笔记-8","date":"2022-07-26T07:43:11.000Z","updated":"2022-07-26T07:43:49.770Z","comments":true,"path":"api/articles/js笔记-8.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"js笔记（BOM）\"><a href=\"#js笔记（BOM）\" class=\"headerlink\" title=\"js笔记（BOM）\"></a>js笔记（BOM）</h1><hr>\n<h2 id=\"BOM\"><a href=\"#BOM\" class=\"headerlink\" title=\"BOM\"></a>BOM</h2><ol>\n<li><p>浏览器对象模型</p>\n</li>\n<li><p>BOM可以使我们通过JS来操作浏览器</p>\n</li>\n<li><p>BOM对象：</p>\n<ol>\n<li><p>Window</p>\n<ol>\n<li>代表的是整个浏览器的窗口，同时window也是网页中的全局对象</li>\n</ol>\n</li>\n<li><p>Navigator</p>\n<ol>\n<li>代表的当前浏览器的信息，通过该对象可以来识别不同的浏览器</li>\n</ol>\n</li>\n<li><p>Location</p>\n<ol>\n<li>代表当前浏览器的地址栏信息，通过Location可以获取地址栏信息，或者操作浏览器跳转页面</li>\n</ol>\n</li>\n<li><p>History</p>\n<ol>\n<li><p>代表浏览器的历史记录，可以通过该对象来操作浏览器的历史记录</p>\n</li>\n<li><p>由于隐私原因，该对象不能获取到具体的历史记录，只能操作浏览器向前或向后翻页，而且该操作只在当次访问时有效</p>\n</li>\n</ol>\n</li>\n<li><p>Screen</p>\n<ol>\n<li>代表用户的屏幕的信息，通过该对象可以获取到用户的显示器的相关的信息</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h2 id=\"Navigator\"><a href=\"#Navigator\" class=\"headerlink\" title=\"Navigator\"></a>Navigator</h2><ol>\n<li><p>代表的当前浏览器的信息，通过该对象可以来识别不同的浏览器</p>\n</li>\n<li><p>由于历史原因，Navigator对象中的大部分属性都已经不能帮助我们识别浏览器</p>\n</li>\n<li><p>一般我们使用userAgent来判断浏览器的信息</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h2><ol>\n<li><p>对象可以用来操作浏览器向前或向后翻页</p>\n</li>\n<li><p>length：属性，可以获取到当前访问的链接数量</p>\n</li>\n<li><p>back( )：可以用来回退到上一个页面，作用和浏览器的回退按钮一样</p>\n</li>\n<li><p>forward( ) :可以跳转到下一个页面，作用和浏览器的前进按钮一样</p>\n</li>\n<li><p>go( )：可以用来跳转到指定页面</p>\n<ol>\n<li><p>它需要一个整数作为参数</p>\n</li>\n<li><p>“ 1 “：表示向前跳转一个页面，相当于forward( )</p>\n</li>\n<li><p>“ 2 “：表示向前跳转两个页面</p>\n</li>\n<li><p>“ -1 “：表示向后跳转一个页面，相当于back( )</p>\n</li>\n<li><p>“ -2 “：表示向后跳转两个页面</p>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h2 id=\"Location\"><a href=\"#Location\" class=\"headerlink\" title=\"Location\"></a>Location</h2><ol>\n<li><p>该对象中封装了浏览器的地址栏信息</p>\n</li>\n<li><p>如果直接打印location，则可以获取到当前页面的完整地址栏信息</p>\n</li>\n<li><p>assign( )：用来跳转到其他页面，作用和直接修改location一样</p>\n</li>\n<li><p>reload( )：用于重新加载当前页面，作用和刷新一样。如果在方法中传递true作为参数，则会强制清空缓存刷新页面</p>\n</li>\n<li><p>replace( )：可以使用一个新的页面替换当前页面，调用完毕也会跳转页面。（不会生成历史记录，不能使用回退按钮回退）</p>\n</li>\n</ol>\n<hr>\n<h2 id=\"Window\"><a href=\"#Window\" class=\"headerlink\" title=\"Window\"></a>Window</h2><ol>\n<li><p>setInterval( )：定时调用，可以将一个函数每隔一段时间执行一次</p>\n<ol>\n<li>参数：1、回调函数，该函数会每隔一段时间被调用一次。2、每次调用间隔的时间，单位是毫秒。</li>\n</ol>\n</li>\n<li><p>clearInterval( )：可以用来关闭一个定时器。方法中需要一个定时器的表示作为参数，这样将关闭标识对应的定时器</p>\n</li>\n<li><p>setTimeout( )：延时调用一个函数不马上执行，而是隔一段时间以后再执行，而且只会执行一次</p>\n</li>\n</ol>\n","categories":[{"name":"笔记","slug":"笔记","count":8,"path":"api/categories/笔记.json"},{"name":"js笔记","slug":"笔记/js笔记","count":8,"path":"api/categories/笔记/js笔记.json"}],"tags":[{"name":"笔记","slug":"笔记","count":8,"path":"api/tags/笔记.json"}]}